#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<utility>
#include<string>
using namespace std;

pair<string, long int> binarySearch(vector<long int> &v, long int q)
{
    size_t low = 0;
    size_t high = v.size() - 1;
    size_t index;
    while(low <= high)
    {
        index = (low + high) / 2;
        if (v[index] == q)
        {
            while((index>=0) && (v[index-1] == q))
            {
                index = index - 1;
            }
            return make_pair("Yes", index + 1);
        }
        else if (v[index] < q)
        {
            low = index + 1;
        }
        else
        {
            high = index - 1;
        }
    }
    return make_pair("No", low + 1);
}
int main() {
    int n,q,find;
    cin>>n;
    vector<int> ar(n);
    // take array input
    for (int i = 0; i<n; i++) {
        cin>>ar[i];
    }
    // take query input
    cin>>q;
    for (int i =0; i<q; i++) {
        cin>>find;
        auto res = lower_bound(ar.begin(),ar.end(),find);
        if (*res == find) {
            cout<<"Yes "<<res-ar.begin()+1<<endl;
        }
        else {
            cout<<"No "<<res-ar.begin()+1<<endl;
        }
    }
    return 0;
}

      
